---
title: "Analyse barometre santé"
output: html_document
date: '2022-10-24'
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
setwd('/Users/126862/')
```

# Importation des bases de données

Les bases de données Stata sont importées et converties pour être lues par R.


```{r importation données, echo=FALSE}
Sys.setlocale("LC_ALL", "fr_FR.UTF-8")
setwd('/Users/126862/')
library(haven)
barometre2020 <- read_dta("Downloads/Données reçues en 2022/baro 2020/BS2020prepost.dta")
barometre2019 <- read_dta("Downloads/Données reçues en 2022/baro 2019/BS2019.dta")
barometre2017 <- read_dta("Downloads/Données reçues en 2022/baro 2017/BS2017.dta")
barometre2016 <- read_dta("Downloads/Données reçues en 2022/baro 2016/BS2016.dta")
barometre2014 <- read_dta("Downloads/Données reçues en 2022/baro 2014/BS2014.dta")
barometre2010 <- read_dta("Downloads/Données reçues en 2022/baro 2010/Baro2010.dta")
barometre2005 <- read_dta("Downloads/Données reçues en 2022/baro 2005/baro2005sp.dta")
barometre2000 <- read_dta("Downloads/Données reçues en 2022/baro 2000/Baro2000.dta")
```


# Régressions


## Pour 2020

### Pro-anti

#### Recodages

On recode la variable va1 en une variable binaire: 1 = provaccin ; 0 = antivaccin. On affiche le tableau des fréquences de la nouvelle variable.

```{r recodage pro anti 2020, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2020$va1 en barometre2020$va1_rec
barometre2020$va1_rec <- barometre2020$va1 %>%
  as.character() %>%
  fct_recode(
    "1" = "2",
    "0" = "3",
    "0" = "4",
    NULL = "5"
  )
freq(barometre2020$va1_rec)
```

On recode le diplome:

```{r recodage diplome 2020, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2020$diplome en barometre2020$diplome_rec
barometre2020$diplome_rec <- barometre2020$diplome %>%
  as.character() %>%
  fct_recode(
    "Sans diplome" = "1",
    "Inferieur bac" = "2",
    "Bac ou equivalent" = "3",
    "Bac +2" = "4",
    "Bac +3/4" = "5",
    "Bac +5 ou plus" = "6"
  )
freq(barometre2020$diplome_rec)
```

On recode la categorie d'agglomération:

```{r recodage cat_agg 2020, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2020$cat_agg6 en barometre2020$cat_agg6_rec
barometre2020$cat_agg6_rec <- barometre2020$cat_agg6 %>%
  as.character() %>%
  fct_recode(
    "Rural" = "1",
    "<20.000" = "2",
    "20 - 99.999" = "3",
    "100.000 - 199.999" = "4",
    ">=200.000" = "5",
    "Agglomération parisienne" = "6"
  )
freq(barometre2020$cat_agg6_rec)
```

On recode les catégories croisées de sexe et d'âge:

```{r recodage sexage 2020, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2020$sexage en barometre2020$sexage_rec
barometre2020$sexage_rec <- barometre2020$sexage %>%
  as.character() %>%
  fct_recode(
    "Hommes 18-24 ans" = "1",
    "Hommes 25-34 ans" = "2",
    "Hommes 35-44 ans" = "3",
    "Hommes 45-54 ans" = "4",
    "Hommes 55-64 ans" = "5",
    "Hommes 65-74 ans" = "6",
    "Hommes 75-85 ans" = "7",
    "Femmes 18-24 ans" = "8",
    "Femmes 25-34 ans" = "9",
    "Femmes 35-44 ans" = "10",
    "Femmes 45-54 ans" = "11",
    "Femmes 55-64 ans" = "12",
    "Femmes 65-74 ans" = "13",
    "Femmes 75-85 ans" = "14"
  )
freq(barometre2020$sexage_rec)
```


On recode les catégories de revenu:

```{r recodage revenus 2020, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2020$sexage en barometre2020$sexage_rec
## Recodage de barometre2020$rev_3K en barometre2020$rev_3K_rec
## Recodage de barometre2020$rev_3K en barometre2020$rev_3K_rec
barometre2020$rev_3K_rec <- barometre2020$rev_3K %>%
  as.character() %>%
  fct_recode(
    "1er tercile" = "1",
    "2ème tercile" = "2",
    "3ème tercile" = "3",
    NULL = "99"
  )
freq(barometre2020$rev_3K_rec)
```

#### Calcul de la régression

```{r régressions pro anti 2020, echo=FALSE}
library(GGally)
library(forestmodel)
reg_proanti_2020 <- glm(barometre2020$va1_rec ~ barometre2020$diplome_rec + barometre2020$sexage_rec + barometre2020$cat_agg6_rec + barometre2020$rev_3K_rec, na.action=na.omit, family=binomial(logit))
## ggcoef_model(reg_proanti_2020, exponentiate = TRUE)
forest_model(reg_proanti_2020, recalculate_width= TRUE)

```


### Très anti Vs reste


#### Recodage


Très défavorable aux vaccins = 1 ; 0 sinon.
```{r recodage très anti vs reste 2020, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2020$va1 en barometre2020$va1_rec
## Recodage de barometre2020$va1 en barometre2020$Tres_defavorable
barometre2020$Tres_defavorable <- barometre2020$va1 %>%
  as.character() %>%
  fct_recode(
    "0" = "1",
    "0" = "2",
    "0" = "3",
    "1" = "4",
    NULL = "5"
  )
freq(barometre2020$Tres_defavorable)
```

#### Régression

```{r régressions tresdef 2020, echo=FALSE}
library(GGally)
library(forestmodel)
reg_tresdef_2020 <- glm(barometre2020$Tres_defavorable ~ barometre2020$diplome_rec + barometre2020$sexage_rec + barometre2020$cat_agg6_rec + barometre2020$rev_3K_rec, na.action=na.omit, family=binomial(logit))
## ggcoef_model(reg_proanti_2020, exponentiate = TRUE)
forest_model(reg_tresdef_2020, recalculate_width= TRUE)
```



## Pour 2019

### Pro-anti

#### Recodages

On recode la variable va1 en une variable binaire: 1 = provaccin ; 0 = antivaccin. On affiche le tableau des fréquences de la nouvelle variable.

```{r recodage pro anti 2019, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2019$va1 en barometre2019$va1_rec
barometre2019$va1_rec <- barometre2019$va1 %>%
  as.character() %>%
  fct_recode(
    "1" = "2",
    "0" = "3",
    "0" = "4",
    NULL = "5"
  )
freq(barometre2019$va1_rec)
```

On recode le diplome:

```{r recodage diplome 2019, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2019$diplome en barometre2019$diplome_rec
barometre2019$diplome_rec <- barometre2019$diplome %>%
  as.character() %>%
  fct_recode(
    "Sans diplome" = "1",
    "Inferieur bac" = "2",
    "Bac ou equivalent" = "3",
    "Bac +2" = "4",
    "Bac +3/4" = "5",
    "Bac +5 ou plus" = "6"
  )
freq(barometre2019$diplome_rec)
```

On recode la categorie d'agglomération:

```{r recodage cat_agg 2019, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2019$cat_agg6 en barometre2019$cat_agg6_rec
barometre2019$cat_agg6_rec <- barometre2019$cat_agg6 %>%
  as.character() %>%
  fct_recode(
    "Rural" = "1",
    "<20.000" = "2",
    "20 - 99.999" = "3",
    "100.000 - 199.999" = "4",
    ">=200.000" = "5",
    "Agglomération parisienne" = "6"
  )
freq(barometre2019$cat_agg6_rec)
```

On recode les catégories croisées de sexe et d'âge:

```{r recodage sexage 2019, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2019$sexage en barometre2019$sexage_rec
barometre2019$sexage_rec <- barometre2019$sexage %>%
  as.character() %>%
  fct_recode(
    "Hommes 18-24 ans" = "1",
    "Hommes 25-34 ans" = "2",
    "Hommes 35-44 ans" = "3",
    "Hommes 45-54 ans" = "4",
    "Hommes 55-64 ans" = "5",
    "Hommes 65-74 ans" = "6",
    "Hommes 75-85 ans" = "7",
    "Femmes 18-24 ans" = "8",
    "Femmes 25-34 ans" = "9",
    "Femmes 35-44 ans" = "10",
    "Femmes 45-54 ans" = "11",
    "Femmes 55-64 ans" = "12",
    "Femmes 65-74 ans" = "13",
    "Femmes 75-85 ans" = "14"
  )
freq(barometre2019$sexage_rec)
```


On recode les catégories de revenu:

```{r recodage revenus 2019, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2019$sexage en barometre2019$sexage_rec
## Recodage de barometre2019$rev_3K en barometre2019$rev_3K_rec
## Recodage de barometre2019$rev_3K en barometre2019$rev_3K_rec
barometre2019$rev_3K_rec <- barometre2019$rev_3K %>%
  as.character() %>%
  fct_recode(
    "1er tercile" = "1",
    "2ème tercile" = "2",
    "3ème tercile" = "3",
    NULL = "99"
  )
freq(barometre2019$rev_3K_rec)
```

#### Calcul de la régression

```{r régressions pro anti 2019, echo=FALSE}
library(GGally)
library(forestmodel)
reg_proanti_2019 <- glm(barometre2019$va1_rec ~ barometre2019$diplome_rec + barometre2019$sexage_rec + barometre2019$cat_agg6_rec + barometre2019$rev_3K_rec, na.action=na.omit, family=binomial(logit))
## ggcoef_model(reg_proanti_2019, exponentiate = TRUE)
forest_model(reg_proanti_2019, recalculate_width= TRUE)

```

#### Recodage


Très défavorable aux vaccins = 1 ; 0 sinon.
```{r recodage très anti vs reste 2019, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2019$va1 en barometre2019$va1_rec
## Recodage de barometre2019$va1 en barometre2019$Tres_defavorable
barometre2019$Tres_defavorable <- barometre2019$va1 %>%
  as.character() %>%
  fct_recode(
    "0" = "1",
    "0" = "2",
    "0" = "3",
    "1" = "4",
    NULL = "5"
  )
freq(barometre2019$Tres_defavorable)
```

#### Régression

```{r régressions tresdef 2019, echo=FALSE}
library(GGally)
library(forestmodel)
reg_tresdef_2019 <- glm(barometre2019$Tres_defavorable ~ barometre2019$diplome_rec + barometre2019$sexage_rec + barometre2019$cat_agg6_rec + barometre2019$rev_3K_rec, na.action=na.omit, family=binomial(logit))
## ggcoef_model(reg_proanti_2019, exponentiate = TRUE)
forest_model(reg_tresdef_2019, recalculate_width= TRUE)
```

## Pour 2017

### Pro-anti

#### Recodages

On recode la variable va1 en une variable binaire: 1 = provaccin ; 0 = antivaccin. On affiche le tableau des fréquences de la nouvelle variable.

```{r recodage pro anti 2017, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2017$va1 en barometre2017$va1_rec
barometre2017$va1_rec <- barometre2017$Q389_C %>%
  as.character() %>%
  fct_recode(
    "1" = "2",
    "0" = "3",
    "0" = "4",
    NULL = "5"
  )
freq(barometre2017$va1_rec)
```

On recode le diplome:

```{r recodage diplome 2017, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2017$diplome en barometre2017$diplome_rec
barometre2017$diplome_rec <- barometre2017$diplome %>%
  as.character() %>%
  fct_recode(
    "Sans diplome" = "1",
    "Inferieur bac" = "2",
    "Bac ou equivalent" = "3",
    "Bac +2" = "4",
    "Bac +3/4" = "5",
    "Bac +5 ou plus" = "6"
  )
freq(barometre2017$diplome_rec)
```

On recode la categorie d'agglomération:

```{r recodage cat_agg 2017, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2017$cat_agg6 en barometre2017$cat_agg6_rec
barometre2017$cat_agg6_rec <- barometre2017$cat_agg6 %>%
  as.character() %>%
  fct_recode(
    "Rural" = "1",
    "<20.000" = "2",
    "20 - 99.999" = "3",
    "100.000 - 199.999" = "4",
    ">=200.000" = "5",
    "Agglomération parisienne" = "6"
  )
freq(barometre2017$cat_agg6_rec)
```

On recode les catégories croisées de sexe et d'âge:

```{r recodage sexage 2017, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2017$sexage en barometre2017$sexage_rec
barometre2017$sexage_rec <- barometre2017$sexage %>%
  as.character() %>%
  fct_recode(
    "Hommes 18-24 ans" = "1",
    "Hommes 25-34 ans" = "2",
    "Hommes 35-44 ans" = "3",
    "Hommes 45-54 ans" = "4",
    "Hommes 55-64 ans" = "5",
    "Hommes 65-74 ans" = "6",
    "Hommes 75-85 ans" = "7",
    "Femmes 18-24 ans" = "8",
    "Femmes 25-34 ans" = "9",
    "Femmes 35-44 ans" = "10",
    "Femmes 45-54 ans" = "11",
    "Femmes 55-64 ans" = "12",
    "Femmes 65-74 ans" = "13",
    "Femmes 75-85 ans" = "14"
  )
freq(barometre2017$sexage_rec)
```


On recode les catégories de revenu:

```{r recodage revenus 2017, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2017$sexage en barometre2017$sexage_rec
## Recodage de barometre2017$rev_3K en barometre2017$rev_3K_rec
## Recodage de barometre2017$rev_3K en barometre2017$rev_3K_rec
barometre2017$rev_3K_rec <- barometre2017$rev_3K %>%
  as.character() %>%
  fct_recode(
    "1er tercile" = "1",
    "2ème tercile" = "2",
    "3ème tercile" = "3",
    NULL = "99"
  )
freq(barometre2017$rev_3K_rec)
```

#### Calcul de la régression

```{r régressions pro anti 2017, echo=FALSE}
library(GGally)
library(forestmodel)
reg_proanti_2017 <- glm(barometre2017$va1_rec ~ barometre2017$diplome_rec + barometre2017$sexage_rec + barometre2017$cat_agg6_rec + barometre2017$rev_3K_rec, na.action=na.omit, family=binomial(logit))
## ggcoef_model(reg_proanti_2017, exponentiate = TRUE)
forest_model(reg_proanti_2017, recalculate_width= TRUE)

```

#### Recodage


Très défavorable aux vaccins = 1 ; 0 sinon.
```{r recodage très anti vs reste 2017, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2017$va1 en barometre2017$Tres_defavorable
barometre2017$Tres_defavorable <- barometre2017$Q389_C %>%
  as.character() %>%
  fct_recode(
    "0" = "1",
    "0" = "2",
    "0" = "3",
    "1" = "4",
    NULL = "5"
  )
freq(barometre2017$Tres_defavorable)
```

#### Régression

```{r régressions tresdef 2017, echo=FALSE}
library(GGally)
library(forestmodel)
reg_tresdef_2017 <- glm(barometre2017$Tres_defavorable ~ barometre2017$diplome_rec + barometre2017$sexage_rec + barometre2017$cat_agg6_rec + barometre2017$rev_3K_rec, na.action=na.omit, family=binomial(logit))
## ggcoef_model(reg_proanti_2017, exponentiate = TRUE)
forest_model(reg_tresdef_2017, recalculate_width= TRUE)
```

## Pour 2016

### Pro-anti

#### Recodages

On recode la variable va1 en une variable binaire: 1 = provaccin ; 0 = antivaccin. On affiche le tableau des fréquences de la nouvelle variable.

```{r recodage pro anti 2016, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2016$va1 en barometre2016$va1_rec
barometre2016$va1_rec <- barometre2016$va1 %>%
  as.character() %>%
  fct_recode(
    "1" = "2",
    "0" = "3",
    "0" = "4",
    NULL = "5"
  )
freq(barometre2016$va1_rec)
```

On recode le diplome. Malheureusement, les regroupements pour les diplomes en 2016 ne sont pas compatibles avec ceux des autres enquêtes: les Bac+2 et 3 sont mêlés entre eux, les bac+4 sont regroupés avec les bac+5 et plus. 

```{r recodage diplome 2016, echo=FALSE}
library(forcats)
library(questionr)

## Recodage de barometre2016$dip5 en barometre2016$dip5_rec
barometre2016$dip5_rec <- barometre2016$dip5 %>%
  as.character() %>%
  fct_recode(
    "Sans diplome" = "1",
    "Inférieur au bac" = "2",
    "Bac ou equivalent" = "3",
    "Bac +2/+3" = "4",
    "Bac+4 ou plus" = "5",
    NULL = "6"
  )
freq(barometre2016$dip5_rec)
## Recodage de barometre2016$diplome en barometre2016$diplome_rec
```

On recode la categorie d'agglomération:

```{r recodage cat_agg 2016, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2016$cat_agg6 en barometre2016$cat_agg6_rec

barometre2016$ca

barometre2016$cat_agg6_rec <- barometre2016$catagg6 %>%
  as.character() %>%
  fct_recode(
    "Rural" = "1",
    "<20.000" = "2",
    "20 - 99.999" = "3",
    "100.000 - 199.999" = "4",
    ">=200.000" = "5",
    "Agglomération parisienne" = "6"
  )
freq(barometre2016$cat_agg6_rec)
```

On recode les catégories croisées de sexe et d'âge:

```{r recodage sexage 2016, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2016$sexage en barometre2016$sexage_rec
barometre2016$sexage_rec <- barometre2016$sexage %>%
  as.character() %>%
  fct_recode(
    "Hommes 18-24 ans" = "1",
    "Hommes 25-34 ans" = "2",
    "Hommes 35-44 ans" = "3",
    "Hommes 45-54 ans" = "4",
    "Hommes 55-64 ans" = "5",
    "Hommes 65-74 ans" = "6",
    "Hommes 75-85 ans" = "7",
    "Femmes 18-24 ans" = "8",
    "Femmes 25-34 ans" = "9",
    "Femmes 35-44 ans" = "10",
    "Femmes 45-54 ans" = "11",
    "Femmes 55-64 ans" = "12",
    "Femmes 65-74 ans" = "13",
    "Femmes 75-85 ans" = "14"
  )
freq(barometre2016$sexage_rec)
```


On recode les catégories de revenu:

```{r recodage revenus 2016, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2016$sexage en barometre2016$sexage_rec
## Recodage de barometre2016$rev_3K en barometre2016$rev_3K_rec
## Recodage de barometre2016$rev_3K en barometre2016$rev_3K_rec
barometre2016$rev_3K_rec <- barometre2016$rev_3K %>%
  as.character() %>%
  fct_recode(
    "1er tercile" = "1",
    "2ème tercile" = "2",
    "3ème tercile" = "3",
    NULL = "99"
  )
freq(barometre2016$rev_3K_rec)
```

#### Calcul de la régression

```{r régressions pro anti 2016, echo=FALSE}
library(GGally)
library(forestmodel)
reg_proanti_2016 <- glm(barometre2016$va1_rec ~ barometre2016$dip5_rec + barometre2016$sexage_rec + barometre2016$cat_agg6_rec + barometre2016$rev_3K_rec, na.action=na.omit, family=binomial(logit))
## ggcoef_model(reg_proanti_2016, exponentiate = TRUE)
forest_model(reg_proanti_2016, recalculate_width= TRUE)

```

#### Recodage


Très défavorable aux vaccins = 1 ; 0 sinon.
```{r recodage très anti vs reste 2016, echo=FALSE}
library(forcats)
library(questionr)
## Recodage de barometre2016$va1 en barometre2016$Tres_defavorable
barometre2016$Tres_defavorable <- barometre2016$va1 %>%
  as.character() %>%
  fct_recode(
    "0" = "1",
    "0" = "2",
    "0" = "3",
    "1" = "4",
    NULL = "5"
  )
freq(barometre2016$Tres_defavorable)
```

#### Régression

```{r régressions tresdef 2016, echo=FALSE}
library(GGally)
library(forestmodel)
reg_tresdef_2016 <- glm(barometre2016$Tres_defavorable ~ barometre2016$dip5_rec + barometre2016$sexage_rec + barometre2016$cat_agg6_rec + barometre2016$rev_3K_rec, na.action=na.omit, family=binomial(logit))
## ggcoef_model(reg_proanti_2016, exponentiate = TRUE)
forest_model(reg_tresdef_2016, recalculate_width= TRUE)
```



